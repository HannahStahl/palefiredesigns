{"ast":null,"code":"(function () {\n  var Address,\n      Category,\n      Client,\n      HttpError,\n      Listing,\n      Me,\n      OAuth,\n      Search,\n      Shop,\n      User,\n      request,\n      util,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function __extends(child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      __slice = [].slice;\n\n  request = require('request');\n  OAuth = require('oauth');\n  util = require('util');\n  User = require('./user');\n  Me = require('./me');\n  Category = require('./category');\n  Shop = require('./shop');\n  Search = require('./search');\n  Listing = require('./listing');\n  Address = require('./address');\n\n  HttpError = function (_super) {\n    __extends(HttpError, _super);\n\n    function HttpError(message, statusCode, headers) {\n      this.message = message;\n      this.statusCode = statusCode;\n      this.headers = headers;\n    }\n\n    return HttpError;\n  }(Error);\n\n  Client = function () {\n    function Client(options) {\n      this.options = options;\n      this.apiKey = this.options.key;\n      this.apiSecret = this.options.secret;\n      this.callbackURL = this.options.callbackURL;\n      this.request = request;\n      this.etsyOAuth = new OAuth.OAuth('https://openapi.etsy.com/v2/oauth/request_token?scope=email_r%20profile_r%20profile_w%20address_r%20address_w', 'https://openapi.etsy.com/v2/oauth/access_token', \"\" + this.apiKey, \"\" + this.apiSecret, '1.0', \"\" + this.callbackURL, 'HMAC-SHA1');\n    }\n\n    Client.prototype.auth = function (token, secret) {\n      this.authenticatedToken = token;\n      this.authenticatedSecret = secret;\n      return this;\n    };\n\n    Client.prototype.me = function () {\n      return new Me(this);\n    };\n\n    Client.prototype.user = function (userId) {\n      return new User(userId, this);\n    };\n\n    Client.prototype.category = function (tag) {\n      return new Category(tag, this);\n    };\n\n    Client.prototype.shop = function (shopId) {\n      return new Shop(shopId, this);\n    };\n\n    Client.prototype.search = function () {\n      return new Search(this);\n    };\n\n    Client.prototype.listing = function (listingId) {\n      return new Listing(listingId, this);\n    };\n\n    Client.prototype.address = function (userId) {\n      return new Address(userId, this);\n    };\n\n    Client.prototype.buildUrl = function (path, pageOrQuery) {\n      var query, _url;\n\n      if (path == null) {\n        path = '/';\n      }\n\n      if (pageOrQuery == null) {\n        pageOrQuery = null;\n      }\n\n      if (pageOrQuery != null && typeof pageOrQuery === 'object') {\n        query = pageOrQuery;\n\n        if (this.apiKey != null && this.apiSecret == null) {\n          query.api_key = this.apiKey;\n        }\n      } else {\n        query = {};\n      }\n\n      if (this.apiKey != null && this.apiSecret == null) {\n        query.api_key = this.apiKey;\n      }\n\n      _url = require('url').format({\n        protocol: \"https:\",\n        hostname: \"openapi.etsy.com\",\n        pathname: \"/v2\" + path,\n        query: query\n      });\n      console.dir(\"API URL is \" + _url + \" \");\n      return _url;\n    };\n\n    Client.prototype.handleResponse = function (res, body, callback) {\n      var err, _ref;\n\n      if (Math.floor(res.statusCode / 100) === 5) {\n        return callback(new HttpError('Error ' + res.statusCode, res.statusCode, res.headers));\n      }\n\n      if (typeof body === 'string') {\n        try {\n          body = JSON.parse(body || '{}');\n        } catch (_error) {\n          err = _error;\n          console.dir(\"Error parsing response: \" + body);\n          return callback(err);\n        }\n      }\n\n      if (body.message && ((_ref = res.statusCode) === 400 || _ref === 401 || _ref === 403 || _ref === 404 || _ref === 410 || _ref === 422)) {\n        return callback(new HttpError(body.message, res.statusCode, res.headers));\n      }\n\n      return callback(null, res.statusCode, body, res.headers);\n    };\n\n    Client.prototype.get = function () {\n      var callback, params, path, _i;\n\n      path = arguments[0], params = 3 <= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), callback = arguments[_i++];\n      console.dir(\"==> Client get request with params \" + params);\n\n      if (this.authenticatedToken != null && this.authenticatedSecret != null) {\n        return this.getAuthenticated.apply(this, [path].concat(__slice.call(params), [callback]));\n      } else {\n        return this.getUnauthenticated.apply(this, [path].concat(__slice.call(params), [callback]));\n      }\n    };\n\n    Client.prototype.put = function (path, content, callback) {\n      var url;\n      url = this.buildUrl(path);\n      console.dir(\"==> Perform PUT request on \" + url + \" with \" + JSON.stringify(content));\n      return this.etsyOAuth.put(url, this.authenticatedToken, this.authenticatedSecret, content, function (_this) {\n        return function (err, data, res) {\n          if (err) {\n            return callback(err);\n          }\n\n          return _this.handleResponse(res, data, callback);\n        };\n      }(this));\n    };\n\n    Client.prototype.post = function (path, content, callback) {\n      var url;\n      url = this.buildUrl(path);\n      console.dir(\"==> Perform POST request on \" + url + \" with \" + JSON.stringify(content));\n      return this.etsyOAuth.post(url, this.authenticatedToken, this.authenticatedSecret, content, function (_this) {\n        return function (err, data, res) {\n          if (err) {\n            return callback(err);\n          }\n\n          return _this.handleResponse(res, data, callback);\n        };\n      }(this));\n    };\n\n    Client.prototype[\"delete\"] = function (path, callback) {\n      var url;\n      url = this.buildUrl(path);\n      console.dir(\"==> Perform DELETE request on \" + url);\n      return this.etsyOAuth[\"delete\"](url, this.authenticatedToken, this.authenticatedSecret, function (_this) {\n        return function (err, data, res) {\n          if (err) {\n            return callback(err);\n          }\n\n          return _this.handleResponse(res, data, callback);\n        };\n      }(this));\n    };\n\n    Client.prototype.getUnauthenticated = function () {\n      var callback, params, path, _i;\n\n      path = arguments[0], params = 3 <= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), callback = arguments[_i++];\n      console.dir(\"==> Perform unauthenticated GET request\");\n      return this.request({\n        uri: this.buildUrl.apply(this, [path].concat(__slice.call(params))),\n        method: 'GET'\n      }, function (_this) {\n        return function (err, res, body) {\n          if (err) {\n            return callback(err);\n          }\n\n          return _this.handleResponse(res, body, callback);\n        };\n      }(this));\n    };\n\n    Client.prototype.getAuthenticated = function () {\n      var callback, params, path, url, _i;\n\n      path = arguments[0], params = 3 <= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), callback = arguments[_i++];\n      url = this.buildUrl.apply(this, [path].concat(__slice.call(params)));\n      console.dir(\"==> Perform authenticated GET request on \" + url);\n      return this.etsyOAuth.get(url, this.authenticatedToken, this.authenticatedSecret, function (_this) {\n        return function (err, data, res) {\n          if (err) {\n            return callback(err);\n          }\n\n          return _this.handleResponse(res, data, callback);\n        };\n      }(this));\n    };\n\n    Client.prototype.requestToken = function (callback) {\n      return this.etsyOAuth.getOAuthRequestToken(function (err, oauth_token, oauth_token_secret) {\n        var auth, loginUrl;\n        console.dir(\"==> Retrieving the request token\");\n\n        if (err) {\n          return callback(err);\n        }\n\n        loginUrl = arguments[3].login_url;\n        auth = {\n          token: oauth_token,\n          tokenSecret: oauth_token_secret,\n          loginUrl: loginUrl\n        };\n        return callback(null, auth);\n      });\n    };\n\n    Client.prototype.accessToken = function (token, secret, verifier, callback) {\n      return this.etsyOAuth.getOAuthAccessToken(token, secret, verifier, function (err, oauth_access_token, oauth_access_token_secret, results) {\n        var accessToken;\n        console.dir(\"==> Retrieving the access token\");\n        accessToken = {\n          token: oauth_access_token,\n          tokenSecret: oauth_access_token_secret\n        };\n        return callback(null, accessToken);\n      });\n    };\n    /**\n    * Allows for adding scope to the requests.\n    * (ex: transactions_r, listings_r, etc..)\n    * @author : httpNick\n    */\n\n\n    Client.prototype.addScope = function (newScope) {\n      return this.etsyOAuth._requestUrl += \"%20\" + newScope;\n    };\n\n    return Client;\n  }();\n\n  module.exports = function (apiKey, options) {\n    return new Client(apiKey, options);\n  };\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}